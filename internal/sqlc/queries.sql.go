// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: queries.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const newAOR = `-- name: NewAOR :exec
INSERT INTO ps_aors
    (id, max_contacts)
VALUES
    ($1, $2)
`

type NewAORParams struct {
	ID          string
	MaxContacts pgtype.Int4
}

func (q *Queries) NewAOR(ctx context.Context, arg NewAORParams) error {
	_, err := q.db.Exec(ctx, newAOR, arg.ID, arg.MaxContacts)
	return err
}

const newEndpoint = `-- name: NewEndpoint :exec
INSERT INTO ps_endpoints
    (id, transport, aors, auth, context, disallow, allow)
VALUES
    ($1, $2, $1, $1, $3, 'all', $4)
`

type NewEndpointParams struct {
	ID        string
	Transport pgtype.Text
	Context   pgtype.Text
	Allow     pgtype.Text
}

func (q *Queries) NewEndpoint(ctx context.Context, arg NewEndpointParams) error {
	_, err := q.db.Exec(ctx, newEndpoint,
		arg.ID,
		arg.Transport,
		arg.Context,
		arg.Allow,
	)
	return err
}

const newMD5Auth = `-- name: NewMD5Auth :exec
INSERT INTO ps_auths
    (id, auth_type, username, realm, md5_cred)
VALUES
    ($1, 'md5', $2, $3, $4)
`

type NewMD5AuthParams struct {
	ID       string
	Username pgtype.Text
	Realm    pgtype.Text
	Md5Cred  pgtype.Text
}

func (q *Queries) NewMD5Auth(ctx context.Context, arg NewMD5AuthParams) error {
	_, err := q.db.Exec(ctx, newMD5Auth,
		arg.ID,
		arg.Username,
		arg.Realm,
		arg.Md5Cred,
	)
	return err
}
